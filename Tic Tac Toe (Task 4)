import tkinter as tk
import random
from tkinter import messagebox

class RockPaperScissorsGUI:
    def __init__(self, root):
        self.root = root
        self.root.title("Rock, Paper, Scissors Game")
        self.user_score = 0
        self.computer_score = 0
        self.round_num = 1
        self.choices = ['rock', 'paper', 'scissors']
        self.create_widgets()

    def create_widgets(self):
        # Girly but darker color palette
        self.root.configure(bg="#2D142C")
        self.info_label = tk.Label(self.root, text="Welcome to Rock, Paper, Scissors!", font=("Comic Sans MS", 20, "bold"), fg="#F67280", bg="#2D142C")
        self.info_label.pack(pady=(18, 8))

        self.instruction_label = tk.Label(self.root, text="Choose rock, paper, or scissors:", font=("Comic Sans MS", 14), fg="#B799FF", bg="#2D142C")
        self.instruction_label.pack(pady=5)

        self.button_frame = tk.Frame(self.root, bg="#2D142C")
        self.button_frame.pack(pady=10)
        self.button_styles = {
            'rock': {'bg': '#53354A', 'fg': '#F67280'},
            'paper': {'bg': '#6C3483', 'fg': '#F8A5C2'},
            'scissors': {'bg': '#483475', 'fg': '#F67280'}
        }
        for choice in self.choices:
            btn = tk.Button(
                self.button_frame,
                text=choice.capitalize(),
                width=12,
                font=("Comic Sans MS", 13, "bold"),
                command=lambda c=choice: self.play_round(c),
                relief=tk.RAISED,
                bd=3,
                bg=self.button_styles[choice]['bg'],
                fg=self.button_styles[choice]['fg'],
                activebackground="#B799FF",
                activeforeground="#2D142C",
                cursor="arrow"
            )
            btn.pack(side=tk.LEFT, padx=10)

        self.result_label = tk.Label(self.root, text="", font=("Comic Sans MS", 14, "bold"), fg="#F67280", bg="#2D142C")
        self.result_label.pack(pady=12)

        self.score_label = tk.Label(self.root, text="Score → You: 0 | Computer: 0", font=("Comic Sans MS", 13, "bold"), fg="#B799FF", bg="#2D142C")
        self.score_label.pack(pady=5)

        self.play_again_btn = tk.Button(self.root, text="Play Again", font=("Comic Sans MS", 12, "bold"), command=self.reset_game, state=tk.DISABLED, bg="#53354A", fg="#F67280", activebackground="#B799FF", activeforeground="#2D142C", cursor="arrow")
        self.play_again_btn.pack(pady=(10, 5))

        self.quit_btn = tk.Button(self.root, text="Quit", font=("Comic Sans MS", 12, "bold"), command=self.root.quit, bg="#483475", fg="#F8A5C2", activebackground="#B799FF", activeforeground="#2D142C", cursor="arrow")
        self.quit_btn.pack(pady=(0, 15))

    def play_round(self, user_choice):
        computer_choice = random.choice(self.choices)
        result = self.determine_winner(user_choice, computer_choice)
        self.result_label.config(
            text=f"You chose: {user_choice.capitalize()}   |   Computer chose: {computer_choice.capitalize()}",
            fg="#F67280"
        )
        if result == "tie":
            message = "It's a tie!"
            color = "#B799FF"
        elif result == "user":
            message = "You win this round!"
            color = "#6C3483"
            self.user_score += 1
        else:
            message = "Computer wins this round!"
            color = "#F67280"
            self.computer_score += 1
        self.score_label.config(text=f"Score → You: {self.user_score} | Computer: {self.computer_score}")
        messagebox.showinfo("Round Result", message)
        self.result_label.config(fg=color)
        self.round_num += 1
        self.play_again_btn.config(state=tk.NORMAL)
        for child in self.button_frame.winfo_children():
            child.config(state=tk.DISABLED)

    def reset_game(self):
        self.result_label.config(text="", fg="#F67280")
        self.play_again_btn.config(state=tk.DISABLED)
        for child in self.button_frame.winfo_children():
            child.config(state=tk.NORMAL)

    def determine_winner(self, user, computer):
        if user == computer:
            return "tie"
        elif (user == "rock" and computer == "scissors") or \
             (user == "scissors" and computer == "paper") or \
             (user == "paper" and computer == "rock"):
            return "user"
        else:
            return "computer"

def main():
    root = tk.Tk()
    app = RockPaperScissorsGUI(root)
    root.mainloop()

if __name__ == "__main__":
    main()
